{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["/**\n * @module react-oauth2-hook\n */\n\n/**\n *\n */\n\nimport * as React from 'react'\n\n// react-storage-hook.d.ts\nimport { useStorage } from 'react-storage-hook'\n\nimport { Map } from 'immutable'\nimport * as PropTypes from 'prop-types'\n\n/**\n * @hidden\n */\nconst storagePrefix = 'react-oauth2-hook'\n\n/**\n * @hidden\n */\nconst oauthStateName = storagePrefix + '-state-token-challenge'\n\n/**\n * useOAuth2Token is a React hook providing an OAuth2 implicit grant token.\n *\n * When useToken is called, it will attempt to retrieve an existing\n * token by the criteria of `{ authorizeUrl, scopes, clientID }`.\n * If a token by these specifications does not exist, the first\n * item in the returned array will be `undefined`.\n *\n * If the user wishes to retrieve a new token, they can call `getToken()`,\n * a function returned by the second parameter. When called, the function\n * will open a window for the user to confirm the OAuth grant, and\n * pass it back as expected via the hook.\n *\n * The OAuth token must be passed to a static endpoint. As\n * such, the `callbackUrl` must be passed with this endpoint.\n * The `callbackUrl` should render the [[OAuthCallback]] component,\n * which will securely verify the token and pass it back,\n * before closing the window.\n *\n * All instances of this hook requesting the same token and scopes\n * from the same place are synchronised. In concrete terms,\n * if you have many components waiting for a Facebook OAuth token\n * to make a call, they will all immediately update when any component\n * gets a token.\n *\n * Finally, in advanced cases the user can manually overwrite any\n * stored token by capturing and calling the third item in\n * the reponse array with the new value.\n *\n * @param authorizeUrl The OAuth authorize URL to retrieve the token from.\n * @param scope The OAuth scopes to request.\n * @param redirectUri The OAuth redirect_uri callback URL.\n * @param clientID The OAuth client_id corresponding to the requesting client.\n * @example\n *const SpotifyTracks = () => {\n * const [token, getToken] = useOAuth2Token({\n *     authorizeUrl: \"https://accounts.spotify.com/authorize\",\n *     scope: [\"user-library-read\"],\n *     clientID: \"abcdefg\",\n *     redirectUri: document.location.origin + \"/callback\"\n * })\n *\n * const [response, setResponse] = React.useState()\n * const [error, setError] = React.useState()\n *\n * // when we get a token, query spotify\n * React.useEffect(() => {\n *     if (token == undefined) {return}\n *     fetch('https://api.spotify.com/v1/me/tracks', {\n *         headers: {\n *             Authorization: `Bearer ${token}`\n *         }\n *     }).then(\n *         json => response.json()\n *     ).then(\n *         data => setResponse(data)\n *     ).catch(\n *         error => setError(error)\n *     )\n * }, [token])\n *\n * if (!token || error) return <div onClick={getToken}> login with Spotify </div>\n *\n *return <div>\n * Your saved tracks on Spotify: {JSON.stringify(response)}\n *</div>\n *}\n */\nexport const useOAuth2Token = ({\n  /**\n   * The OAuth authorize URL to retrieve the token\n   * from.\n   */\n  authorizeUrl,\n  /**\n   * The OAuth scopes to request.\n   */\n  scope = [],\n  /**\n   * The OAuth `redirect_uri` callback.\n   */\n  redirectUri,\n  /**\n   * The OAuth `client_id` corresponding to the\n   * requesting client.\n   */\n  clientID\n}: {\n  authorizeUrl: string\n  scope: string[],\n  redirectUri: string,\n  clientID: string\n}): [\n  OAuthToken | undefined,\n  getToken,\n  setToken\n] => {\n  const target = {\n    authorizeUrl, scope, clientID\n  }\n\n  const [token, setToken]: [OAuthToken | undefined, (newValue: string) => void] = useStorage(\n    storagePrefix + '-' + JSON.stringify(target)\n  )\n\n  let [state, setState] = useStorage(\n    oauthStateName\n  )\n\n  const getToken = () => {\n    setState(state = JSON.stringify({\n      nonce: cryptoRandomString(),\n      target\n    }))\n\n    window.open(OAuth2AuthorizeURL({\n      scope,\n      clientID,\n      authorizeUrl,\n      state,\n      redirectUri\n    }))\n  }\n\n  return [token, getToken, setToken]\n}\n\n/**\n * OAuthToken represents an OAuth2 implicit grant token.\n */\nexport type OAuthToken = string\n\n/**\n * getToken is returned by [[useOAuth2Token]].\n * When called, it prompts the user to authorize.\n */\nexport type getToken = () => void\n\n/**\n * setToken is returned by [[useOAuth2Token]].\n * When called, it overwrites any stored OAuth token.\n * `setToken(undefined)` can be used to synchronously\n * invalidate all instances of this OAuth token.\n */\nexport type setToken = (newValue: OAuthToken | undefined) => void\n\n/**\n * @hidden\n */\nconst cryptoRandomString = () => {\n  const entropy = new Uint32Array(10)\n  window.crypto.getRandomValues(entropy)\n\n  return window.btoa([...entropy].join(','))\n}\n\n/**\n * @hidden\n */\nconst OAuth2AuthorizeURL = ({\n  scope,\n  clientID,\n  state,\n  authorizeUrl,\n  redirectUri\n}: {\n  scope: string[],\n  clientID: string,\n  state: string,\n  authorizeUrl: string,\n  redirectUri: string\n}) => `${authorizeUrl}?${Object.entries({\n  scope: scope.join(','),\n  client_id: clientID,\n  state,\n  redirect_uri: redirectUri,\n  response_type: 'token'\n}).map(([k, v]) => [k, v].map(encodeURIComponent).join('=')).join('&')}`\n\n/**\n * This error is thrown by the [[OAuthCallback]]\n * when the state token recieved is incorrect or does not exist.\n */\nexport const ErrIncorrectStateToken = new Error('incorrect state token')\n\n/**\n * This error is thrown by the [[OAuthCallback]]\n * if no access_token is recieved.\n */\nexport const ErrNoAccessToken = new Error('no access_token')\n\n\n/**\n * @hidden\n */\nconst urlDecode = (urlString: string): Map<string,string> => Map(urlString.split('&').map<[string,string]>(\n  (param: string): [string,string] => {\n    const [k, v] = param.split('=').map(decodeURIComponent)\n    return [k, v]\n  }))\n\n/**\n * @hidden\n */\nconst OAuthCallbackHandler: React.FunctionComponent<{}> = () => {\n  const [state] = useStorage(oauthStateName)\n  const { target } = JSON.parse(state)\n  const [ /* token */, setToken ] = useStorage(\n    storagePrefix + '-' + JSON.stringify(target)\n  )\n\n  console.log('rendering OAuthCallbackHandler')\n\n  React.useEffect(() => {\n    const params: Map<string,string> = Map([\n      ...urlDecode(window.location.search.slice(1)),\n      ...urlDecode(window.location.hash.slice(1))\n    ])\n\n    if (state !== params.get('state')) throw ErrIncorrectStateToken\n\n    const token: string | undefined = params.get('access_token')\n    if (token == undefined) throw ErrNoAccessToken\n\n    setToken(token)\n    window.close()\n  }, [])\n\n  return <React.Fragment>'please wait...'</React.Fragment>\n}\n\n/**\n * OAuthCallback is a React component that handles the callback\n * step of the OAuth2 protocol.\n *\n * OAuth2Callback is expected to be rendered on the url corresponding\n * to your redirect_uri.\n *\n * By default, this component will deal with errors by closing the window,\n * via its own React error boundary. Pass `{ errorBoundary: false }`\n * to handle this functionality yourself.\n *\n * @example\n * <Route exact path=\"/callback\" component={OAuthCallback} />} />\n */\nexport const OAuthCallback: React.FunctionComponent<{\n  errorBoundary?: boolean\n}> = ({\n  /**\n   * When set to true, errors are thrown\n   * instead of just closing the window.\n   */\n  errorBoundary = true\n}) => {\n  if (errorBoundary === false) return <OAuthCallbackHandler />\n  return <ClosingErrorBoundary>\n    <OAuthCallbackHandler />\n  </ClosingErrorBoundary>\n}\n\nOAuthCallback.propTypes = {\n  errorBoundary: PropTypes.bool\n}\n\n/**\n * @hidden\n */\nclass ClosingErrorBoundary extends React.PureComponent {\n  static getDerivedStateFromError(error: string) {\n    console.log(error)\n    // window.close()\n  }\n\n\n  static propTypes = {\n    children: PropTypes.func.isRequired\n  }\n\n  render() { return this.props.children }\n}\n\n\nexport default \"this module has no default export.\";\n"],"names":["useStorage","Map","React.useEffect","React.createElement","React.Fragment","PropTypes.bool","React.PureComponent","PropTypes.func"],"mappings":"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"}
